{"version":3,"sources":["./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/framework/framework.component.ts","./src/app/framework/framework.component.html","./src/environments/environment.ts","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/appointment-details/appointment-details.component.ts","./src/app/appointment-details/appointment-details.component.html","./src/app/app.module.ts","./src/app/appointment-service.service.ts","./src/app/appointments/appointments.component.html","./src/app/appointments/appointments.component.ts","./src/app/add-appointment/add-appointment.component.ts","./src/app/add-appointment/add-appointment.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    document.title = \"Appointment Booking System - About\";\n  }\n\n}\n","<p>about works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.css']\n})\nexport class FrameworkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <!--Navbar-->\n  <nav class=\"navbar navbar-expand-md bg-primary navbar-dark\">\n    <a class=\"navbar-brand\" routerLink=\"\">Appointment Booking System</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link text-light\" routerLink=\"appointments\"><strong>My Appointments</strong></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link text-light\" routerLink=\"add\"><strong>Add an Appointment</strong></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link text-light\" routerLink=\"about\"><strong>About</strong></a>\n        </li>    \n      </ul>\n    </div>  \n  </nav>\n  <!-- Navbar-->\n    <router-outlet></router-outlet>\n</body>\n</html>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  home_image: string = \"assets/home_title.png\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    document.title = \"Appointment Booking System\";\n  }\n\n}\n","<div class=\"container-fluid\" id=\"homePic\">\n \n    <p id=\"title\">Book Your Appointments <br> With Us!</p><br>\n    <button mat-stroked-button color=\"primary\" id=\"btn\"><a routerLink=\"add\">Get Started!</a></button>\n\n    <img [src]=\"home_image\" id=\"homeImage\" class=\"float-right\" alt=\"\">\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport {Appointment} from '../appointment';\nimport {AppointmentServiceService} from '../appointment-service.service';\nimport {Params, Router, ActivatedRoute} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\nimport {switchMap} from 'rxjs/operators';\nimport { NgForm } from '@angular/forms';\nimport {DatePipe} from '@angular/common';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-appointment-details',\n  templateUrl: './appointment-details.component.html',\n  styleUrls: ['./appointment-details.component.css'],\n  providers: [AppointmentServiceService]\n})\nexport class AppointmentDetailsComponent implements OnInit {\n\n  appointmentReceived: Appointment;\n  minDate: Date;\n  maxDate: Date;\n  selected: String;\n  setFullDate: String;\n  private dateToSend: String;\n  private updateDataToSend: any;\n  \n  \n  \n\n  constructor(private appointmentService: AppointmentServiceService, private router: Router, private activatedRoute: ActivatedRoute, private http: HttpClient, private datePipe: DatePipe) {\n\n    const currentYear = new Date().getFullYear();\n    const currentMonth = new Date().getMonth();\n    const today = new Date().getDate();\n    this.minDate = new Date(currentYear, currentMonth, today);\n    this.maxDate = new Date(currentYear, currentMonth+2, 30);\n    \n   }\n\n\n  ngOnInit(): void {\n    \n    \n    this.activatedRoute.params.pipe(switchMap((parameter: Params) => {\n\n      return this.appointmentService.getSingleAppointment(parameter.id);\n    })).subscribe((appointment: Appointment) => {\n\n\n      this.appointmentReceived = appointment;\n      \n    });\n\n    \n  }\n\n \n\n  updateAppointment(updateFormData: NgForm){\n\n    console.log(updateFormData.value);\n    \n    if(!updateFormData.value.fullname || !updateFormData.value.date || !updateFormData.value.email || !updateFormData.value.contact || !updateFormData.value.time){\n\n      document.querySelector('#alert').classList.add('show');\n\n      setTimeout(() => {\n          document.querySelector('#alert').classList.remove('show');\n      }, 3000);\n      return;\n    }else{\n    \n    document.querySelector('#form').classList.add('formHide');\n    this.dateToSend = this.datePipe.transform(updateFormData.value.date, 'd/M/YYYY');\n    this.updateDataToSend = {\n      appointmentDate: this.dateToSend,\n      appointmentTime: updateFormData.value.time,\n      fullName: updateFormData.value.fullname,\n      email: updateFormData.value.email,\n      contact: updateFormData.value.contact\n\n    };\n    \n    this.appointmentService.updateAppointment(this.updateDataToSend, this.appointmentReceived._id);\n\n    location.href = \"\";\n  }\n  }\n\n  delete(){\n  \n    this.appointmentService.deleteAppointment(this.appointmentReceived._id);\n\n    location.href = \"\";\n  }\n\n  showForm(){\n    \n    document.querySelector('#form').classList.remove('formHide');\n  }\n\n}\n","<div class=\"container\" id=\"dataContainer\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-8\">\n            <h1 class=\"text-center\">-: {{appointmentReceived.fullName}}'s Appointment Details :-</h1>\n            <p class=\"text-center\">Full Name: <strong>{{appointmentReceived.fullName}}</strong></p>\n            <p class=\"text-center\">Appointment Date: <strong>{{appointmentReceived.appointmentDate}}</strong></p>\n            <p class=\"text-center\">Appointment Time: <strong>{{appointmentReceived.appointmentTime}}</strong></p>\n            <p class=\"text-center\">Email: <strong>{{appointmentReceived.email}}</strong></p>\n            <p class=\"text-center\">Contact Number: <strong>{{appointmentReceived.contact}}</strong></p>\n        </div>\n        <div class=\"col-md-2\"></div>\n    </div>\n\n   <button type=\"button\" class=\"btn btn-success\" id=\"updateBtn\" (click)=\"showForm()\">Update Appointment</button>\n   <button class=\"btn btn-danger\" id=\"deleteBtn\" (click)=\"delete()\">Delete Appointment</button>\n   <button class=\"btn btn-info\" id=\"homeBtn\"><a routerLink=\"\">Home</a></button>\n</div>\n\n<div class=\"alert alert-danger alert-dismissible fade\" role=\"alert\" id=\"alert\">\n    <strong>Invalid input received or field is empty!</strong> Please check.\n   <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n     <span aria-hidden=\"true\">&times;</span>\n   </button>\n </div>\n\n<form #appointmentUpdateFormData=\"ngForm\" id=\"form\" class=\"formHide\" (ngSubmit)=\"updateAppointment(appointmentUpdateFormData)\">\n    <mat-form-field>\n        <mat-label>Full Name</mat-label>\n        <input matInput required name=\"fullname\" ngModel={{appointmentReceived.fullName}}>\n    </mat-form-field>\n    \n    \n    <mat-form-field>\n        <mat-label>Choose a date (M-DD-YYYY)</mat-label>\n        <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker\" name=\"date\" ngModel required>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n       \n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Select Appointment Time</mat-label>\n        <mat-select [(value)]=\"selected\" required name=\"time\" ngModel={{appointmentReceived.appointmentTime}}>\n          <mat-option value=\"10:00 AM\">10:00 AM</mat-option>\n          <mat-option value=\"11:00 AM\">11:00 AM</mat-option>\n          <mat-option value=\"12:00 PM\">12:00 PM</mat-option>\n          <mat-option value=\"1:00 PM\">1:00 PM</mat-option>\n          <mat-option value=\"2:00 PM\">2:00 PM</mat-option>\n          <mat-option value=\"3:00 PM\">3:00 PM</mat-option>\n          <mat-option value=\"4:00 PM\">4:00 PM</mat-option>\n          <mat-option value=\"5:00 PM\">5:00 PM</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input matInput required name=\"email\" ngModel={{appointmentReceived.email}}>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Contact</mat-label>\n        <input matInput required name=\"contact\" ngModel={{appointmentReceived.contact}}>\n    </mat-form-field>\n\n    <button type=\"submit\" class=\"btn btn-success\">Save changes</button>\n    </form>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { FrameworkComponent } from './framework/framework.component';\nimport {APP_BASE_HREF} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport { AboutComponent } from './about/about.component';\nimport { AppointmentsComponent } from './appointments/appointments.component';\nimport { AddAppointmentComponent } from './add-appointment/add-appointment.component';\nimport { AppointmentDetailsComponent } from './appointment-details/appointment-details.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule} from '@angular/forms';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport {DatePipe} from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    HomePageComponent,\n    FrameworkComponent,\n    AboutComponent,\n    AppointmentsComponent,\n    AddAppointmentComponent,\n    AppointmentDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatInputModule,\n    FormsModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatSelectModule,\n    RouterModule.forRoot([\n      {\n        path: '',\n        component: HomePageComponent\n      },\n      {\n        path: 'appointments',\n        component: AppointmentsComponent\n      },\n      {\n        path: 'add',\n        component: AddAppointmentComponent\n      },\n      {\n        path: 'appointment/:id',\n        component: AppointmentDetailsComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      }\n    ]),\n    BrowserAnimationsModule\n  ],\n  providers: [{provide: APP_BASE_HREF, useValue: '/'}, DatePipe],\n  bootstrap: [FrameworkComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {Appointment} from './appointment';\nimport {HttpClient, HttpResponse} from '@angular/common/http';  \n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentServiceService {\n\n  private url = \"http://localhost:3000/api/appointments\";\n  private singleUrl = \"http://localhost:3000/api/appointment\";\n\n  appointmentList: Appointment[];\n\n  constructor(private http: HttpClient) { }\n\n  getAppointmentList(): Promise<void | Appointment[]>{\n\n    return this.http.get(this.url)\n    .toPromise()\n    .then(response => response as Appointment[])\n    .catch(this.handleErrorFunction);\n  }\n\n  getSingleAppointment(appointmentId: string): Promise<void | Appointment>{\n\n    return this.http.get(this.singleUrl+'/'+appointmentId)\n    .toPromise()\n    .then((response) => response as Appointment)\n    .catch(this.handleErrorFunction);\n  }\n\n  saveToDatabaseFunction(appointment: Appointment): Promise<void | Appointment>{\n\n    return this.http.post(this.url, appointment)\n    .toPromise()\n    .then((response) => response as Appointment)\n    .catch(this.handleErrorFunction);\n  }\n\n  updateAppointment(updatedAppointment: Appointment, id: string): Promise<void | Appointment>{\n\n    return this.http.put(this.singleUrl+\"/\"+id, updatedAppointment)\n    .toPromise()\n    .then((response) => response as Appointment)\n    .catch(this.handleErrorFunction);\n  }\n\n  deleteAppointment(id: string){\n\n    this.http.delete(this.singleUrl+\"/\"+id)\n    .toPromise()\n    .then((response) => response)\n    .catch(this.handleErrorFunction);\n  }\n\n  private handleErrorFunction(error: any){\n\n    console.log(error);\n  }\n}\n","<h1 class=\"text-center\">-: My Appointments :-</h1>\n<div class=\"container-fluid table-data\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-8\">\n            <table class=\"table table-hover text-center\" id=\"DataTable\">\n                <thead class=\"bg-primary\">\n                  <tr>\n                    <th scope=\"col\">Full Name</th>\n                    <th scope=\"col\">Appointment Date</th>\n                    <th scope=\"col\">Appointment Time</th>\n                    <th scope=\"col\">Action</th>\n                    \n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let item of appointmentList\">\n                    <td>{{item.fullName}}</td>\n                    <td>{{item.appointmentDate}}</td>\n                    <td>{{item.appointmentTime}}</td>\n                    <td><a routerLink=\"/appointment/{{item._id}}\"> <button mat-raised-button color=\"primary\">View Details</button></a></td>\n                  </tr>\n                 \n                </tbody>\n              </table>\n        </div>\n        <div class=\"col-md-2\"></div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport {AppointmentServiceService} from '../appointment-service.service';\nimport {Appointment} from '../appointment';\n\n@Component({\n  selector: 'app-appointments',\n  templateUrl: './appointments.component.html',\n  styleUrls: ['./appointments.component.css']\n})\nexport class AppointmentsComponent implements OnInit {\n\n  appointmentList: Appointment[];\n\n  constructor(private appointmentService : AppointmentServiceService ) { }\n\n  ngOnInit(): void {\n\n    document.title = \"Appointment Booking System - My Appointments\";\n\n    this.appointmentService.getAppointmentList().then((appointments: Appointment[]) => {\n\n      this.appointmentList = appointments.map((item) => item);\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {DatePipe} from '@angular/common';\nimport {Appointment} from '../appointment';\nimport {Router} from '@angular/router';\nimport {AppointmentServiceService} from '../appointment-service.service';\n\n\n@Component({\n  selector: 'app-add-appointment',\n  templateUrl: './add-appointment.component.html',\n  styleUrls: ['./add-appointment.component.css']\n})\nexport class AddAppointmentComponent implements OnInit {\n\n  minDate: Date;\n  maxDate: Date;\n  private dataToSend: any;\n  selected: \"10:00 AM\";\n\n  constructor(private appointmentService: AppointmentServiceService, private router: Router, private datePipe: DatePipe) { \n\n    const currentYear = new Date().getFullYear();\n    const currentMonth = new Date().getMonth();\n    const today = new Date().getDate();\n    this.minDate = new Date(currentYear, currentMonth, today);\n    this.maxDate = new Date(currentYear, currentMonth+2, 30);\n\n  }\n\n  ngOnInit(): void {\n\n    document.title = \"Appointment Booking System - Add Appointment\"\n\n    \n  }\n\n  saveAppointment(appointmentFormData: NgForm){\n\n   var phoneRegex = /^\\d{10}$/;\n   var emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n   if(!(appointmentFormData.value.contact.match(phoneRegex)) || !(appointmentFormData.value.email.match(emailRegex)))\n   {\n      var alertDialog = document.querySelector('#alert');\n      alertDialog.classList.add('show');\n      setTimeout(()=>{\n\n        alertDialog.classList.remove('show');\n      }, 5000);\n      return;\n   }\n    \n    if(!appointmentFormData.value.fullname && !appointmentFormData.value.date && !appointmentFormData.value.time && !appointmentFormData.value.email && !appointmentFormData.value.contact){\n      \n      \n      var alertDialog = document.querySelector('#alert');\n      alertDialog.classList.add('show');\n      setTimeout(()=>{\n\n        alertDialog.classList.remove('show');\n      }, 5000);\n    }else{\n\n      if(this.datePipe.transform(appointmentFormData.value.date, 'shortDate') == null){\n\n        var alertDialog = document.querySelector('#alert');\n      alertDialog.classList.add('show');\n      setTimeout(()=>{\n\n        alertDialog.classList.remove('show');\n      }, 5000);\n      }\n      this.dataToSend = {\n        appointmentDate: this.datePipe.transform(appointmentFormData.value.date, 'shortDate'),\n        appointmentTime: appointmentFormData.value.time,\n        fullName: appointmentFormData.value.fullname,\n        email: appointmentFormData.value.email,\n        contact: appointmentFormData.value.contact\n      };\n      \n      this.appointmentService.saveToDatabaseFunction(this.dataToSend);\n      var alertDialog = document.querySelector('#successAlert');\n      alertDialog.classList.add('show');\n      setTimeout(()=>{\n\n        alertDialog.classList.remove('show');\n        this.router.navigateByUrl(\"\");\n      }, 5000);\n      \n      \n    }\n    \n  }\n\n}\n","<div class=\"container\">\n    \n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-8\" id=\"formContainer\">\n            <h1 class=\"text-center\">-: Create an Appointment :-</h1>\n\n            <div class=\"alert alert-danger alert-dismissible fade\" role=\"alert\" id=\"alert\">\n                <strong>Invalid input received or field is empty!</strong> Please check.\n               <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                 <span aria-hidden=\"true\">&times;</span>\n               </button>\n             </div>\n\n             <div class=\"alert alert-success alert-dismissible fade\" role=\"alert\" id=\"successAlert\">\n                <strong>Your Appointment has been confirmed.</strong> You'll be redirected to Home in few seconds.\n               <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                 <span aria-hidden=\"true\">&times;</span>\n               </button>\n             </div>\n\n            <form #appointmentFormData=\"ngForm\" id=\"form\" (ngSubmit)=\"saveAppointment(appointmentFormData)\">\n            <mat-form-field>\n                <mat-label>Full Name</mat-label>\n                <input matInput required name=\"fullname\" ngModel>\n            </mat-form-field>\n            \n            <mat-form-field>\n                <mat-label>Choose a date</mat-label>\n                <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker\" name=\"date\" ngModel required>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Select Appointment Time</mat-label>\n                <mat-select [(value)]=\"selected\" required name=\"time\" ngModel>\n                  <mat-option value=\"10:00 AM\">10:00 AM</mat-option>\n                  <mat-option value=\"11:00 AM\">11:00 AM</mat-option>\n                  <mat-option value=\"12:00 PM\">12:00 PM</mat-option>\n                  <mat-option value=\"1:00 PM\">1:00 PM</mat-option>\n                  <mat-option value=\"2:00 PM\">2:00 PM</mat-option>\n                  <mat-option value=\"3:00 PM\">3:00 PM</mat-option>\n                  <mat-option value=\"4:00 PM\">4:00 PM</mat-option>\n                  <mat-option value=\"5:00 PM\">5:00 PM</mat-option>\n                </mat-select>\n              </mat-form-field>\n\n              <mat-form-field>\n                <mat-label>Email</mat-label>\n                <input matInput required name=\"email\" ngModel>\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Contact</mat-label>\n                <input matInput required name=\"contact\" ngModel>\n            </mat-form-field>\n\n            <button type=\"submit\" mat-raised-button color=\"primary\">Book Appointment</button>\n            </form>\n\n            \n           \n        </div>\n        <div class=\"col-md-2\"></div>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}